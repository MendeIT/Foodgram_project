version: '3'

services:
  db:
    image: postgres:13.10
    container_name: foodgram_db
    restart: always
    env_file: 
      - .env
    volumes:
      - pg_data:/var/lib/postgresql/data

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    image: mendeit/foodgram_backend
    container_name: foodgram_backend
    env_file: 
      - .env
    volumes:
      - static_backend:/backend_static
      - media:/app/foodgram_project/mediafiles/
    depends_on:
      - db

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    image: mendeit/foodgram_frontend
    container_name: foodgram_frontend
    volumes:
      - static_frontend:/app/result_build/
    command: cp -r /app/build/. /app/result_build/

  gateway:
    build:
      context: ./gateway
      dockerfile: Dockerfile
    image: mendeit/foodgram_gateway
    container_name: foodgram_gateway
    volumes:
      - static_backend:/var/html/static/
      - media:/var/html/mediafiles/media/
      - static_frontend:/usr/share/nginx/html/
      - ./docs/openapi-schema.yml:/var/html/redoc/openapi-schema.yml
      - ./docs/redoc.html:/var/html/redoc/redoc.html
    depends_on:
      - frontend
      - backend
    ports:
      - 8500:80

volumes:
  pg_data:
  static_backend:
  static_frontend:
  media:

networks:
  default:
    name: foodgram_network